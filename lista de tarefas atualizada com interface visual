import tkinter as tk
from tkinter import messagebox
from datetime import datetime

def validar_data(data_hora):
    try:
        datetime.strptime(data_hora, "%d/%m/%Y %H:%M")
        return True
    except:
        return False

def adicionar_tarefa():
    nome = entry_nome.get()
    descricao = entry_descricao.get()
    data = entry_data.get()
    hora = entry_hora.get()
    
    data_hora = f"{data} {hora}"
    
    if validar_data(data_hora):
        tarefa = f"{nome};{descricao};{data};{hora}"
        lista_tarefas.append(tarefa)
        atualizar_lista()
        limpar_campos()
    else:
        messagebox.showerror("Erro", "Data ou hora inválidas!")

def listar_tarefas():
    lista_tarefas_text.delete(1.0, tk.END)
    for i, tarefa in enumerate(lista_tarefas):
        informacoes = tarefa.split(";")
        lista_tarefas_text.insert(tk.END, f"Tarefa número {i+1}\n")
        lista_tarefas_text.insert(tk.END, "-"*30 + "\n")
        lista_tarefas_text.insert(tk.END, f"Nome: {informacoes[0]}\n")
        lista_tarefas_text.insert(tk.END, f"Descrição: {informacoes[1]}\n")
        lista_tarefas_text.insert(tk.END, f"Data: {informacoes[2]}\n")
        lista_tarefas_text.insert(tk.END, f"Hora: {informacoes[3]}\n")
        lista_tarefas_text.insert(tk.END, "\n")

def remover_tarefa():
    try:
        indice = int(entry_remover.get()) - 1
        if 0 <= indice < len(lista_tarefas):
            lista_tarefas.pop(indice)
            atualizar_lista()
        else:
            messagebox.showerror("Erro", "Número da tarefa inválido!")
    except ValueError:
        messagebox.showerror("Erro", "Digite um número válido!")

def atualizar_lista():
    listar_tarefas()

def limpar_campos():
    entry_nome.delete(0, tk.END)
    entry_descricao.delete(0, tk.END)
    entry_data.delete(0, tk.END)
    entry_hora.delete(0, tk.END)
    entry_remover.delete(0, tk.END)

# Inicialização da lista de tarefas
lista_tarefas = []

# Configuração da janela principal
root = tk.Tk()
root.title("Gerenciador de Tarefas")

# Criação dos widgets
tk.Label(root, text="Nome da Tarefa:").grid(row=0, column=0, padx=10, pady=5)
entry_nome = tk.Entry(root)
entry_nome.grid(row=0, column=1, padx=10, pady=5)

tk.Label(root, text="Descrição da Tarefa:").grid(row=1, column=0, padx=10, pady=5)
entry_descricao = tk.Entry(root)
entry_descricao.grid(row=1, column=1, padx=10, pady=5)

tk.Label(root, text="Data (dd/mm/aaaa):").grid(row=2, column=0, padx=10, pady=5)
entry_data = tk.Entry(root)
entry_data.grid(row=2, column=1, padx=10, pady=5)

tk.Label(root, text="Hora (hh:mm):").grid(row=3, column=0, padx=10, pady=5)
entry_hora = tk.Entry(root)
entry_hora.grid(row=3, column=1, padx=10, pady=5)

tk.Button(root, text="Adicionar Tarefa", command=adicionar_tarefa).grid(row=4, column=0, columnspan=2, pady=10)

tk.Label(root, text="Remover Tarefa (Número):").grid(row=5, column=0, padx=10, pady=5)
entry_remover = tk.Entry(root)
entry_remover.grid(row=5, column=1, padx=10, pady=5)

tk.Button(root, text="Remover Tarefa", command=remover_tarefa).grid(row=6, column=0, columnspan=2, pady=10)

lista_tarefas_text = tk.Text(root, width=50, height=15)
lista_tarefas_text.grid(row=7, column=0, columnspan=2, padx=10, pady=10)

# Inicializar a lista de tarefas
atualizar_lista()

# Iniciar o loop principal da interface gráfica
root.mainloop()
